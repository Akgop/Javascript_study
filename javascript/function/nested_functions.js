// JS nested function 중첩함수
// 중첩함수는 함수 내에 또다른 함수를 선언하는 것을 말한다.

// 언제 사용해야 할까?
// 1. 클린 코드 -> 코드의 의도를 주석으로 주절주절 설명하는 것은 가독성이 떨어진다.
//             -> 내부 객체를 확인하기 위해 this.~~ == null 보단 is~~null 중첩함수를 만들어서 가독성이 좋게
// 2. 성능적 관점 -> 아래 코드에서 Car를 100번 호출하면, Horn은 100번 생성, 파괴 된다.
//               -> 성능상 문제가 있어 보이나 이제는 JS엔진의 최적화를 거쳐 거의 차이가 없다.
// 3. 클로저(Closure) -> 자바스크립트 함수의 지역적으로 선언 된 값을 외부로 노출하고자 하는 것.
//                   -> return문을 사용하여 외부 스코프와 내부 스코프를 이어준다.
function Car () {
    // 마치 자바의 내부 함수처럼 사용
    Horn();     // 함수 호이스팅을 통해 빵빵 출력
    function Horn() {
        console.log("빵빵");
    }
    Horn();
}

Car();
// Horn(); --> 에러 발생

