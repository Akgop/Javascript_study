/* 
call by value: 값이 복사되어 넘어가서 해당 함수에서 
               어떤 일을 해도 원래 인자는 바뀌지 않는 것
call by ref:   값을 담고있는 주소(reference)를 넘겨준다.
               밖의 인자가 영향을 받는다.
               
call by sharing: 참조 값에 대한 복사본을 만들어 넘긴다.
                 즉, 참조 값에 대한 call by value.
*/

// 1. a는 0x12라는 주소를 참조한다고 해보자
var a = {};

// 3. a의 복사본, 즉 0x12라는 참조 값이 들어있는 메모리가
//    b에 할당된다. 따라서 b는 0x12를 참조하게 된다.
var func = function(b) {
    // 4. b.a = 1에서 0x12에 a라는 프로퍼티 = 1 로 갱신된다.
    // 5. b = (); 에서 b의 참조값이 변경된다. 이를 0x22라 해보자
    //    이후 b에는 b.a의 값, 1이 저장된다.
    b = (b.a = 1);
    console.log(b); // 1 출력
    // 6. 이후 b.b = 2에서 b는 number type이 되었으므로
    //    b.b = 2 는 할당 자체가 되지 않는다.
    b.b = 2;
    console.log(b); // 마찬가지로 1 출력
}

func(a);    // 2. a의 복사본이 생성된다.

// 7. 따라서 a는 a.a는 0x12에 생성되지만
//    이후 b 매개변수는 더이상 a객체의 참조값을 갖고 있지 않다.
//    따라서 {a: 1} 의 결과를 출력하게 된다.
console.log(a);
